const u=e=>new URL(`../pyodide/${e}`,import.meta.url).toString(),g={chess:[u("chess-1.10.0-py3-none-any.whl")]},y=e=>{const r=[];let o;const n=/^\s*import\s+(\w+)(?:\s+as\s+\w+)?(?:\s*,\s*(\w+)(?:\s+as\s+\w+)?)*|^\s*from\s+(\w+)(?:\.\w+)*\s+import/gm,l=new Set;for(;(o=n.exec(e))!==null;){if(o[1]&&(l.add(o[1]),o[2])){const t=o[2].split(",").map(i=>i.trim());for(const i of t)i&&l.add(i)}o[3]&&l.add(o[3])}for(const t of l)if(g[t]){const i=g[t];for(const d of i)r.includes(d)||r.push(d)}return r};var b="data:application/octet-stream;base64,aW1wb3J0IG1hdHBsb3RsaWIKaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAppbXBvcnQgaW8KaW1wb3J0IGJhc2U2NAoKbWF0cGxvdGxpYi51c2UoJ0FHRycpCgojIEFkZCBhIHBsdCBfcmVwcl9wbmdfIGZ1bmN0aW9uIC0gdGhpcyB3aWxsIGVtaXQgYSBwbmcgaWYgcGx0IGlzIHJldHVybmVkIGZyb20gYSBjZWxsCmRlZiBfcmVwcl9wbmdfKCk6CiAgICBidWYgPSBpby5CeXRlc0lPKCkKICAgIHBsdC5zYXZlZmlnKGJ1ZiwgZm9ybWF0PSdwbmcnLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgYnVmLnNlZWsoMCkKICAgIGltYWdlX2Jhc2U2NCA9IGJhc2U2NC5iNjRlbmNvZGUoYnVmLmdldHZhbHVlKCkpLmRlY29kZSgndXRmLTgnKSAKICAgIHBsdC5jbGYoKQogICAgcGx0LmNsb3NlKCkKICAgIGJ1Zi5jbG9zZSgpCiAgICByZXR1cm4gaW1hZ2VfYmFzZTY0CgpwbHQuX3JlcHJfcG5nXyA9IF9yZXByX3BuZ18KCiMgT3ZlcnJpZGUgdGhlIG9yaWdpbmFsIHNob3cgZnVuY3Rpb24KZGVmIG1hdHBsb3RsaWJfY3VzdG9tX3Nob3coKToKICAgIGltYWdlX2Jhc2U2NCA9IHBsdC5fcmVwcl9wbmdfKCkKICAgIGpzLmltYWdlQmFzZTY0KGltYWdlX2Jhc2U2NCkgIyB0eXBlOmlnbm9yZSAgICAKCnBsdC5zaG93ID0gbWF0cGxvdGxpYl9jdXN0b21fc2hvdwo=";const w=["matplotlib"],I=async(e,r)=>{const n=await(await fetch(new URL(Object.assign({"./matplotlib.py":b})[`./${r}.py`],import.meta.url))).text();await e.runPythonAsync(n)};let s,c=null;const m=typeof SharedArrayBuffer<"u";async function f(e){const o=await(await fetch(new URL(e,import.meta.url))).text();await s.runPythonAsync(o)}async function h(){console.log("PyodideWorker: Starting Pyodide initialization...");{const{loadPyodide:e}=await import(new URL("../pyodide/pyodide.mjs",import.meta.url).toString());s=await e()}if(console.log("PyodideWorker: Checking for interrupt buffer"),m){const e=new SharedArrayBuffer(4);c=new Int32Array(e),s.setInterruptBuffer(c),console.log("PyodideWorker: Interrupt buffer created")}else console.warn("PyodideWorker: SharedArrayBuffer is not available, interrupt functionality will be disabled");console.log("PyodideWorker: Creating override for stdout"),s.globals.set("_override_stdout",{write:e=>(self.postMessage({type:"stdout",text:e}),e.length),flush:()=>{}}),console.log("PyodideWorker: Overriding input calls with async equivalent"),f("./async_input.py"),console.log("PyodideWorkder: Creating override for input"),s.globals.set("_override_input",e=>new Promise(r=>{self.postMessage({type:"input_request",message:e||""});const o=n=>{n.data.type==="input_response"&&(self.removeEventListener("message",o),r(n.data.value))};self.addEventListener("message",o)})),console.log("PyodideWorker: Creating override for js functions"),s.globals.set("js",{imageBase64:e=>{self.postMessage({type:"execute_result",result:{"image/png":[e]}})}}),console.log("PyodideWorker: Initializing Python environment"),f("./python_init.py")}self.onmessage=async e=>{const{type:r,...o}=e.data;switch(r){case"initialize":try{await h(),self.postMessage({type:"initialized",interruptBuffer:c?c.buffer:null,hasInterrupt:m})}catch(t){console.error("PyodideWorker: Failed to initialize Pyodide:",t),self.postMessage({type:"fatal",error:String(t)})}break;case"run":const n=o.code,l=o.cellId;try{if(s){console.log("PyodideProvider: Loading packages from imports");const t=await s.loadPackagesFromImports(n);console.log("PyodideProvider: Loading additional packages from code");const i=await s.loadPackage(y(n));console.log("PyodideProvider: Searching for overrides");for(const p of[...t,...i])w.indexOf(p.name)!==-1&&(console.log(`PyodideProvider: Implementing override for ${p.name}`),await I(s,p.name));console.log("PyodideProvider: Transforming code to support async inputs");const d=await s.runPythonAsync(`transform_code(${JSON.stringify(n)})`);console.log(`PyodideProvider: Running cell ${l}`);const a=await s.runPythonAsync(`${d}`);console.log("PyodideProvider: Returning result"),a&&(typeof a=="object"?("_repr_svg_"in a&&self.postMessage({type:"execute_result",result:{"image/svg+xml":a._repr_svg_()}}),"_repr_html_"in a&&self.postMessage({type:"execute_result",result:{"text/html":a._repr_html_()}}),"_repr_png_"in a&&self.postMessage({type:"execute_result",result:{"image/png":a._repr_png_()}}),self.postMessage({type:"execute_result",result:{"text/plain":a.__repr__()}})):self.postMessage({type:"execute_result",result:{"text/plain":a.toString()}})),self.postMessage({type:"execute_completed"})}}catch(t){console.error(t),self.postMessage({type:"error",error:String(t)})}break}};
